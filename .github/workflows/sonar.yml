name: Sonar Continuous Integration
env:
  DOTNET_VERSION: '8.x'                     # Versión de .NET
  SONAR_ORG: 'apibank211'                    # Organización de SonarCloud
  SONAR_PROJECT: 'apibank211_proyecto'       # Proyecto en SonarCloud

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      # Checkout del código
      - uses: actions/checkout@v4

      # Configuración de Java 17
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Configurar la versión de .NET
      - name: Configurar la versión de .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Restaurar dependencias .NET
      - name: Restaurar dependencias
        run: dotnet restore Bank

      # Ejecutar pruebas y generar reporte de cobertura en formato OpenCover
      - name: Ejecutar pruebas con cobertura
        run: dotnet test Bank --collect:"XPlat Code Coverage;Format=opencover"

      # Instalar el generador de reportes de cobertura
      - name: Instalar ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      # Generar informe de cobertura en formato HTML para revisiones locales
      - name: Generar informe de cobertura
        run: reportgenerator -reports:**/coverage.opencover.xml -targetdir:coverage -reporttypes:Html

      # Instalar el SonarScanner
      - name: Instalar Scanner
        run: dotnet tool install -g dotnet-sonarscanner

      # Ejecutar análisis de SonarCloud
      - name: Ejecutar análisis con SonarCloud
        run: |
          dotnet-sonarscanner begin /k:"${{ env.SONAR_PROJECT }}" /o:"${{ env.SONAR_ORG }}" \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
          /d:sonar.qualitygate.wait=true

          # Compilar el proyecto
          dotnet build Bank

          # Finalizar el análisis
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
